{
  "info": {
    "name": "Wheels-Unisabana API",
    "description": "API para el sistema de carpooling de la Universidad de La Sabana",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string",
      "description": "JWT token from login (automatically set by login request)"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login (Temporary)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Extract access_token from Set-Cookie header",
                  "const cookies = pm.response.headers.get(\"Set-Cookie\");",
                  "if (cookies) {",
                  "    const match = cookies.match(/access_token=([^;]+)/);",
                  "    if (match) {",
                  "        pm.collectionVariables.set(\"access_token\", match[1]);",
                  "        console.log(\"âœ“ Access token saved to collection variable\");",
                  "    }",
                  "}",
                  "",
                  "// Verify successful login",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user object\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"user\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"corporateEmail\": \"test@unisabana.edu.co\",\n  \"password\": \"YourPassword123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            },
            "description": "Login to get access_token cookie (automatically saved to collection variable)"
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Cookie",
                "value": "access_token={{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "logout"
              ]
            },
            "description": "Logout and clear access_token cookie"
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get my profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Cookie",
                "value": "access_token={{access_token}}",
                "type": "text",
                "description": "JWT authentication cookie"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "me"
              ]
            },
            "description": "Returns the authenticated user's profile with sanitized data.\nFor drivers, includes `driver.hasVehicle` computed dynamically.\n"
          },
          "response": []
        },
        {
          "name": "Update my profile (partial)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Cookie",
                "value": "access_token={{access_token}}",
                "type": "text",
                "description": "JWT authentication cookie"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "users",
                "me"
              ]
            },
            "description": "Update authenticated user's profile. Supports JSON and multipart/form-data.\n\n**Allowed fields**: `firstName`, `lastName`, `phone`, `profilePhoto` (file)\n**Immutable fields** (403): `corporateEmail`, `universityId`, `role`, `id`, `password`\n\nPhoto replacement is atomic: old photo deleted only after successful update.\n",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "firstName",
                  "value": "",
                  "type": "text",
                  "description": ""
                },
                {
                  "key": "lastName",
                  "value": "",
                  "type": "text",
                  "description": ""
                },
                {
                  "key": "phone",
                  "value": "",
                  "type": "text",
                  "description": ""
                },
                {
                  "key": "profilePhoto",
                  "type": "file",
                  "src": [],
                  "description": "JPEG, PNG, or WebP image (max 5MB)"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ]
}